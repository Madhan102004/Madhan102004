<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic Tac Toe</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            flex-direction: column;
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }

        h1 {
            margin-bottom: 20px;
            color: #333;
        }

        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-gap: 10px;
            background: linear-gradient(45deg, #ffcccb, #add8e6);
            padding: 10px;
            border-radius: 10px;
        }

        .cell {
            width: 100px;
            height: 100px;
            background-color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 24px;
            cursor: pointer;
            border: 2px solid #ddd;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .cell:hover {
            background-color: #f0f0f0;
        }

        .cell.x {
            color: #ff6347; /* Tomato */
        }

        .cell.o {
            color: #4682b4; /* SteelBlue */
        }

        button {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 16px;
            background-color: #4CAF50; /* Green */
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h1>Tic Tac Toe</h1>
    <div class="board" id="board">
        <div class="cell" data-cell></div>
        <div class="cell" data-cell></div>
        <div class="cell" data-cell></div>
        <div class="cell" data-cell></div>
        <div class="cell" data-cell></div>
        <div class="cell" data-cell></div>
        <div class="cell" data-cell></div>
        <div class="cell" data-cell></div>
        <div class="cell" data-cell></div>
    </div>
    <button id="restartButton">Restart</button>
    <script>
        const X_CLASS = 'x';
        const O_CLASS = 'o';
        const WINNING_COMBINATIONS = [
          [0, 1, 2],
          [3, 4, 5],
          [6, 7, 8],
          [0, 3, 6],
          [1, 4, 7],
          [2, 5, 8],
          [0, 4, 8],
          [2, 4, 6]
        ];

        const cellElements = document.querySelectorAll('[data-cell]');
        const board = document.getElementById('board');
        const restartButton = document.getElementById('restartButton');
        let oTurn;

        startGame();

        restartButton.addEventListener('click', startGame);

        function startGame() {
          oTurn = false;
          cellElements.forEach(cell => {
            cell.classList.remove(X_CLASS);
            cell.classList.remove(O_CLASS);
            cell.removeEventListener('click', handleClick);
            cell.addEventListener('click', handleClick, { once: true });
          });
        }

        function handleClick(e) {
          const cell = e.target;
          const currentClass = oTurn ? O_CLASS : X_CLASS;
          placeMark(cell, currentClass);
          if (checkWin(currentClass)) {
            endGame(false);
          } else if (isDraw()) {
            endGame(true);
          } else {
            swapTurns();
          }
        }

        function endGame(draw) {
          if (draw) {
            alert("Draw!");
          } else {
            alert(`${oTurn ? "O's" : "X's"} Wins!`);
          }
          startGame();
        }

        function isDraw() {
          return [...cellElements].every(cell => {
            return cell.classList.contains(X_CLASS) || cell.classList.contains(O_CLASS);
          });
        }

        function placeMark(cell, currentClass) {
          cell.classList.add(currentClass);
        }

        function swapTurns() {
          oTurn = !oTurn;
        }

        function checkWin(currentClass) {
          return WINNING_COMBINATIONS.some(combination => {
            return combination.every(index => {
              return cellElements[index].classList.contains(currentClass);
            });
          });
        }
    </script>
</body>
</html>
